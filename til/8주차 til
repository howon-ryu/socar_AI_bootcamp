[8-2] 
딥러닝의 경우 학습에 많은 시간과 비용이 필요

그래서 fine-tuning사용(현재의 문제가 기존 학습 모델과 유사할때 사용)
그래서 이미 학습된 모델 parameter를 initial 로 해서 현재 문제에 맞게 추가학습을 하는것!
=>작은 learning rate(1/10)를 사용하여 기존 parameter를 변화시키지 않도록 함

fine-tuning의 적용 방법
1. 모델 전체 업데이트
2. 앞부분은 고정(freeze),뒷부분만 업데이트

ensemble-> 모델들의 예측을 합쳐서 강력한 모델을 생성
합치는 방법 :
hard voting(더 확률이 높은것 선택), soft voting(더한후 나누기), weighted voting(가중치 방식)

모델의 종류 : alexnet, vgg, resnet

[8-3]
self-supervised learning (자기지도 학습)
배경 : 딥러닝은 지도 학습을 했을때 성능이 굉장히 좋음
하지만 supervised learning(지도 학습)은 하고싶다고 할수 있는것이 아님!(정답 label을 주어야하기 때문에)
그렇다면 어떻게 label이 없는데도 지도학습처럼 학습을 할수 있을까?
=> self-supervised learning

과정
1.사용자가 직접 만든 task인 pretext task를 정의
2. label이 없는 데이터를 변형하여 pretext task를 학습할 수 있는 supervision을 생성
3. 생성한 supervision으로 pretask에 대해 학습

autoencoder에서 supervision은 원본이미지에 해당

self-supervised leaning을 통해 학습시킨 모델을 pretrained network 로 사용하여 downstream task(실제로 목표하는 작업)의 기반으로 확용

그렇다면 self-supervised leaning을 통해 학습시킨 모델이 진짜 학습이 잘됬는지는 어떻게 알까?
=> label이 있는 데이터 셋에 자기지도 학습을 하여 확인

좋은 feature extractor를 뽑았는지 확인하는 방법은?
=> self-supervised로 pretrain된 부분을 freeze한 채로 label이 있는 데이터에 대해 학습하여 성능을 측정

[8-4]
인공신경망의 예측을 왜 해석해야 할까?
- 인공신경망의 판단의 근거를 알수가 없음-> 인공신경망이 브레이크를 output을 했는데 왜?
- 사람이 생각하지 못한 인공신경망의 판단-> 알파고

그러나 아직까지 인공지능의 예측을 명쾌하게 해석하는 방법은 없음

grad-cam
cnn을 기준으로 어떤 spatial한 위치가 해당 node에 영향을 많이 줬는지 표시
feature 가 class node와 얼마나 영향이 있나? 를 측정

grad-cam응용
nurse와 doctor를 구분할때 둘다 nurse로 나와서 왜 그런지를 보면 grad-cam이 확인한 영역이 사람 얼굴과 머리를 보고
판단한것! 즉 nurse와 doctor의 데이터가 남자여자가 구분이 안되어 있어서 인공지능은 이렇게 파악한것!
그래서 성비를 재구성하여 학습을 하니까 얼굴이나 머리스타일이 아닌 청진기 등으로 doctor와 nurse로 구분함

grad-cam=>classification label 만으로 segmentation을 수행 가능

[8-5]
gan(generative adversarial networks) 
진짜 같은 데이터를 생성해내는 generative model(생성 모델)

두개의 네트워크
1. generator : 랜덤 노이즈 벡터로부터 데이터 생성
2. discriminator: 입력 이미지가 실제인지 생성인지 판별
 

generator가 만들어낸 이미지가 discriminator가 구분하지 못할 정도로 계속 만들게 되면
generator의 성능이 점점 상승하고 구분하지 못하는 이미지가 생성될것!

[8-6,7]

rnn : 순차적 데이터 처리에 특화된 인공신경망
언어번역, 주가 예측, 로봇 컨트롤(순차적인 예측이 필요한 경우)


rnn의 한계로 인한 attention model의 등장(input이 길어진다면 담을 수 있는 정보의 한계가 생김)
self-attention을 통해 각 위치의 feature를 얻음
input 마다 vector를 만들어서 서로 비교 하고 attention을 구함
